---
description: Bundles and caches an app or gem.
parameters:
  bundler_version:
    type: string
    default: "2.0.1"
  ruby_version:
    type: string
  cache_version:
    type: string
    default: "1"
steps:
  - run:
      name: Generate a cache key for the bundle
      # Let's break this command down step by step.
      # `command : >` - YAML magic to concatenate the lines, stripping indentation equal to the next line.
      # `find .` - To start, we're going to find things decending from the currect directory.
      # `-path "*vendor/bundle" -prune -o` - Prevent find from searching the vendor/bundle directory.
      # This helps with idempotentcy, as gems will be installed into vendor/bundle, and they have Gemfiles.
      # `-path "*.git" -prune -o` - Prevent find from searching the .git directory.
      # `-type f \( -name "Gemfile*" -o -name "*.gemspec" \)` - Match any file beginning with "Gemfile" or
      # ending in ".gemspec". No, the '.' is not expanded like with regex.
      # `-exec md5sum {} \+` - Execute md5sum on the files found. BUT! The '+' means call md5sum only once,
      # with all the filenames one after another.
      # `| sort -o "BUNDLE_CACHE_KEY"` - Send the output of the find command into sort, and write the output to a
      # file named 'BUNDLE_CACHE_KEY'. The files will be sorted by their md5 rather than their name.
      command: >
        find .
        -path "*vendor/bundle" -prune -o
        -path "*.git" -prune -o
        -type f \( -name "Gemfile*" -o -name "*.gemspec" \)
        -exec md5sum {} \+
        | sort -o "BUNDLE_CACHE_KEY"

  - run:
      name: Show contents of BUNDLE_CACHE_KEY
      command: cat "BUNDLE_CACHE_KEY"

  - restore_cache:
      name: Restore bundle from cache
      keys:
        - v<< parameters.cache_version >>-ruby<< parameters.ruby_version >>-bundler<< parameters.bundler_version >>-bundle{{ checksum "BUNDLE_CACHE_KEY" }}
        - v<< parameters.cache_version >>-ruby<< parameters.ruby_version >>-bundler<< parameters.bundler_version >>
        - v<< parameters.cache_version >>-ruby<< parameters.ruby_version >>
        - v<< parameters.cache_version >>

  - run:
      name: Update bundler
      command: |
        echo 'export BUNDLER_VERSION=<< parameters.bundler_version >>' >> $BASH_ENV
        gem install bundler -v << parameters.bundler_version >>

  - run:
      name: Install dependencies
      command: bundle check || bundle install --jobs=4 --retry=3

  - save_cache:
      name: Save bundle cache
      key: v<< parameters.cache_version >>-ruby<< parameters.ruby_version >>-bundler<< parameters.bundler_version >>-bundle{{ checksum "BUNDLE_CACHE_KEY" }}
      paths:
        - vendor/bundle

  - run:
      name: List gems
      command: bundle list > /tmp/gem_list.txt

  - store_artifacts:
      path: /tmp/gem_list.txt
      destination: bundle
